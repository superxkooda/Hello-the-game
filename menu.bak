#include "menu.h"
void menu::animate(int maxX, int maxY)
{
	void fall(bool);
	static int x , y , g, t, i; //positions
	static bool test, time;//has ran
	//	static char hello[1][5];
	x=(maxX/2)-2;
	//	----23--- char each
	static char h[] = "10001010h1010101010111\be";//8
	static char e[] = "10001010101e0101010111\be";//11
	static char l[] = "1000101010101l01010111\bf";//13
	static char l2[] ="10001010101010l1010111\bf";//14
	static char o[] = "10001010101010101o011t\bf";//17
	//find out if this function has been called before
	if(test != true)
	{

		i=0;
		test = true;
		y=0;
		g = 0;
	}

	if(time !=true)
	{
		t=0;
		time = true;

	}

	if ( t == 1)
	{

		t=0;
		if (i<23)
			fall(false);
		else
			fall(true);


		void fall(bool over)
		{
			int	z=0;
			int m=0;
			int check=0;

			if(over == true)
				m	 = m + (i-24); 

			while(true)
			{
				if(m>i)
					break;

				if(z+y==8 && m ==8 || check >=1)
				{
					mvprintw(8,x,"%c",h[8]);
					if(check<1)
						check=1;
				}
				else
					mvprintw(y+z,x,"%c",h[m]);

				if(z+y==8 && m ==11 || check >= 2)
				{
					mvprintw(8,x+1,"%c",e[11]);
					if(check<2)
						check=2;
				}
				else
					mvprintw(y+z,x+1,"%c",e[m]);

				if(z+y==8 && m ==13 || check >= 3)
				{
					mvprintw(8,x+2,"%c",l[13]);
					if(check<3)
						check=3;
				}
				else
					mvprintw(y+z,x+2,"%c",l[m]);

				if(z+y==8 && m ==14 || check >=4)
				{
					mvprintw(8,x+3,"%c",l2[14]);
					if(check<4)
						check=4;
				}
				else
					mvprintw(y+z,x+3,"%c",l2[m]);

				if(z+y==8 && m ==17 || check == 5)
				{
					mvprintw(8,x+4,"%c",o[17]);
					if(check<5)
						check=5;
				}
				else
					mvprintw(y+z,x+4,"%c",o[m]);
				z--;
				m++;
			}
			i++;
		}

		/*if(x<maxX -6)
			mvprintw(y,x,"%c",h[1]);

			if( x < maxX - 6 && y < (maxY/2)  )
			y = y + 2;

			else
			{
			x= x + 6;
			if ( g == 0 )
			{
			y=1;
			g=1;
			}
			else
			{
			y=0;
			g=0;
			}
			}
			time = false;
			*/	}
	else
		t++;

}

int menu::init()
{
	int wait = -1;

	while( wait == -1 )
	{
		animate(stdx, stdy);
		timeout(16.667);
		wait = getch();
		refresh();
	}
	return 0;
}

